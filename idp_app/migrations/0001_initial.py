# Generated by Django 5.0.1 on 2024-01-19 11:47

import core.utils
import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notice_id', models.AutoField(primary_key=True, serialize=False, verbose_name='notification_id')),
                ('trigger', models.CharField(choices=[('Idp_created', 'Idp Created'), ('Task_created', 'Task Created'), ('Task_due', 'Task Due')], default='Idp_created', max_length=255, verbose_name='notification_trigger')),
                ('name', models.CharField(max_length=255, verbose_name='notification_name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='notification_description')),
            ],
        ),
        migrations.CreateModel(
            name='IDP',
            fields=[
                ('idp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='idp_id')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('target', models.TextField(blank=True, max_length=255, null=True, verbose_name='target')),
                ('status', models.CharField(choices=[('active', 'Активные'), ('completed', 'Выполненные'), ('two_weeks', 'Две недели до плановой даты выполнения'), ('overdue', 'Просроченные'), ('canceled', 'Отмененные'), ('closed', 'Закрытые'), ('draft', 'Черновик')], default='draft', max_length=255, verbose_name='status')),
                ('start_date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='start_date')),
                ('end_date_plan', models.DateTimeField(blank=True, default=core.utils.default_end_date_plan, null=True, verbose_name='end_date_plan')),
                ('end_date_fact', models.DateTimeField(blank=True, null=True, verbose_name='end_date_fact')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idps', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IdpNotification',
            fields=[
                ('in_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='notification_user_id')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='notification_sent_datetime')),
                ('status', models.CharField(choices=[('Read', 'Read'), ('Unread', 'Unread')], default='Unread', max_length=40, verbose_name='notification_status')),
                ('idp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idp_notices', to='idp_app.idp', verbose_name='idp')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notice_idps', to='idp_app.notification', verbose_name='notification')),
            ],
        ),
        migrations.AddField(
            model_name='idp',
            name='notifications',
            field=models.ManyToManyField(blank=True, through='idp_app.IdpNotification', to='idp_app.notification', verbose_name='notifications'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False, verbose_name='task_id')),
                ('task_name', models.CharField(max_length=150, verbose_name='task_name')),
                ('task_description', models.CharField(max_length=10000, verbose_name='task_description')),
                ('task_status', models.CharField(choices=[('active', 'Активные'), ('completed', 'Выполненные'), ('two_weeks', 'Две недели до плановой даты выполнения'), ('overdue', 'Просроченные'), ('canceled', 'Отмененные'), ('closed', 'Закрытые'), ('draft', 'Черновик')], default='Open', max_length=40, verbose_name='task_status')),
                ('task_start_date', models.DateTimeField(verbose_name='task_start_date')),
                ('task_end_date_plan', models.DateTimeField(blank=True, verbose_name='task_end_date_plan')),
                ('task_end_date_fact', models.DateTimeField(blank=True, null=True, verbose_name='task_end_date_fact')),
                ('task_note_employee', models.CharField(max_length=10000, verbose_name='task_note_employee')),
                ('task_note_cheif', models.CharField(max_length=10000, verbose_name='task_note_cheif')),
                ('task_note_mentor', models.CharField(max_length=10000, verbose_name='task_note_mentor')),
                ('idp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='idp_app.idp', verbose_name='idp')),
                ('task_mentor_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentor_tasks', to=settings.AUTH_USER_MODEL, verbose_name='task_mentor_id')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ('task_id',),
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False, verbose_name='file_id')),
                ('file_name', models.CharField(max_length=100, verbose_name='file_name')),
                ('file_link', models.URLField(max_length=5000, verbose_name='file_link')),
                ('file_type', models.CharField(max_length=10, verbose_name='file_type')),
                ('file_task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='idp_app.task', verbose_name='file_task_id')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
                'ordering': ('file_id',),
            },
        ),
        migrations.CreateModel(
            name='TaskNotification',
            fields=[
                ('tn_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='notification_user_id')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='notification_sent_datetime')),
                ('status', models.CharField(choices=[('Read', 'Read'), ('Unread', 'Unread')], default='Unread', max_length=40, verbose_name='notification_status')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notice_tasks', to='idp_app.notification', verbose_name='notification')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_notices', to='idp_app.task', verbose_name='task')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='notifications',
            field=models.ManyToManyField(blank=True, through='idp_app.TaskNotification', to='idp_app.notification', verbose_name='notifications'),
        ),
    ]
