# Generated by Django 5.0.1 on 2024-02-04 14:14

import django.db.models.deletion
import users.managers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False, verbose_name='company_id')),
                ('company_name', models.CharField(max_length=200, verbose_name='company_name')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ('company_id',),
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('pos_id', models.AutoField(primary_key=True, serialize=False, verbose_name='position_id')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='position_name')),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dep_id', models.AutoField(primary_key=True, serialize=False, verbose_name='dep_id')),
                ('dep_name', models.CharField(max_length=400, verbose_name='dep_name')),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company', verbose_name='company_id')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departmens',
                'ordering': ('dep_id',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='user_id')),
                ('first_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='middle_name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('email', models.EmailField(db_index=True, max_length=100, unique=True, verbose_name='user_email')),
                ('is_admin', models.BooleanField(default=False, verbose_name='user_is_admin')),
                ('is_staff', models.BooleanField(default=False, help_text='Указывает, может ли пользователь войти в панелб админа.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Указывает, следует ли считать этого пользователя активным. Снимите этот флаг вместо удаления учетных записей.', verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, help_text='Указывает, что у этого пользователя есть все разрешения без их явного назначения.', verbose_name='superuser status')),
                ('chief', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to=settings.AUTH_USER_MODEL, verbose_name='chief')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.department', verbose_name='user_department')),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.position', verbose_name='user_position')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('last_name', 'first_name'),
            },
            managers=[
                ('objects', users.managers.CustomUserManager()),
            ],
        ),
    ]
